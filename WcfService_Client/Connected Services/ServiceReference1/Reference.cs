//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfService_Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductsDto", Namespace="http://schemas.datacontract.org/2004/07/WcfServer.Dto.Dto")]
    [System.SerializableAttribute()]
    public partial class ProductsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityPerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SalesPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StockCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdateByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QuantityPerUnit {
            get {
                return this.QuantityPerUnitField;
            }
            set {
                if ((this.QuantityPerUnitField.Equals(value) != true)) {
                    this.QuantityPerUnitField = value;
                    this.RaisePropertyChanged("QuantityPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SalesPrice {
            get {
                return this.SalesPriceField;
            }
            set {
                if ((this.SalesPriceField.Equals(value) != true)) {
                    this.SalesPriceField = value;
                    this.RaisePropertyChanged("SalesPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StockCount {
            get {
                return this.StockCountField;
            }
            set {
                if ((this.StockCountField.Equals(value) != true)) {
                    this.StockCountField = value;
                    this.RaisePropertyChanged("StockCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdateBy {
            get {
                return this.UpdateByField;
            }
            set {
                if ((this.UpdateByField.Equals(value) != true)) {
                    this.UpdateByField = value;
                    this.RaisePropertyChanged("UpdateBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/GetAll", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/GetAllResponse")]
        WcfService_Client.ServiceReference1.ProductsDto[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/GetAll", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/GetAllResponse")]
        System.Threading.Tasks.Task<WcfService_Client.ServiceReference1.ProductsDto[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/GetById", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/GetByIdResponse")]
        WcfService_Client.ServiceReference1.ProductsDto GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/GetById", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/GetByIdResponse")]
        System.Threading.Tasks.Task<WcfService_Client.ServiceReference1.ProductsDto> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/Add", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/AddResponse")]
        void Add(WcfService_Client.ServiceReference1.ProductsDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/Add", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/AddResponse")]
        System.Threading.Tasks.Task AddAsync(WcfService_Client.ServiceReference1.ProductsDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/Update", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/UpdateResponse")]
        void Update(WcfService_Client.ServiceReference1.ProductsDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/Update", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(WcfService_Client.ServiceReference1.ProductsDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/Delete", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServiceBaseOf_ProductsDto/Delete", ReplyAction="http://tempuri.org/ServiceBaseOf_ProductsDto/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : WcfService_Client.ServiceReference1.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<WcfService_Client.ServiceReference1.IProductService>, WcfService_Client.ServiceReference1.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfService_Client.ServiceReference1.ProductsDto[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WcfService_Client.ServiceReference1.ProductsDto[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public WcfService_Client.ServiceReference1.ProductsDto GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<WcfService_Client.ServiceReference1.ProductsDto> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public void Add(WcfService_Client.ServiceReference1.ProductsDto dto) {
            base.Channel.Add(dto);
        }
        
        public System.Threading.Tasks.Task AddAsync(WcfService_Client.ServiceReference1.ProductsDto dto) {
            return base.Channel.AddAsync(dto);
        }
        
        public void Update(WcfService_Client.ServiceReference1.ProductsDto dto) {
            base.Channel.Update(dto);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(WcfService_Client.ServiceReference1.ProductsDto dto) {
            return base.Channel.UpdateAsync(dto);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
